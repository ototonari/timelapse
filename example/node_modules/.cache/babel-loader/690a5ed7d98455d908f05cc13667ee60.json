{"ast":null,"code":"import _slicedToArray from \"/Volumes/ST-side-SSD/tsubasa/engineer/playground/typescript/timelapse-app/node_modules/timelapse/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Volumes/ST-side-SSD/tsubasa/engineer/playground/typescript/timelapse-app/node_modules/timelapse/src/container/Timelapse.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { TimelapseFC } from \"../component/Timelapse\";\nimport ImagePreloader from \"../component/ImagePreloader\";\nvar LoadState;\n\n(function (LoadState) {\n  LoadState[LoadState[\"None\"] = 0] = \"None\";\n  LoadState[LoadState[\"Loading\"] = 1] = \"Loading\";\n  LoadState[LoadState[\"Loaded\"] = 2] = \"Loaded\";\n})(LoadState || (LoadState = {}));\n\nexport const TimelapseApp = props => {\n  const _useState = useState(LoadState.None),\n        _useState2 = _slicedToArray(_useState, 2),\n        loadState = _useState2[0],\n        setLoadState = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        images = _useState4[0],\n        setImages = _useState4[1];\n\n  useEffect(() => {\n    switch (loadState) {\n      case LoadState.None:\n        // sampleImagesFromUnsplash(\"nature\").then((images) => {\n        //   setLoadState(LoadState.Loading)\n        //   setImages(images)\n        // })\n        setLoadState(LoadState.Loading);\n        setImages(sampleImageCreator(100));\n        break;\n\n      case LoadState.Loading:\n        setTimeout(() => setLoadState(LoadState.Loaded), 3000);\n        break;\n\n      default:\n        break;\n    }\n  });\n\n  const component = loadState => {\n    switch (loadState) {\n      case LoadState.None:\n        return \"Loading Images\";\n\n      case LoadState.Loading:\n        if (images === null) return null;\n        return React.createElement(React.Fragment, null, React.createElement(ImagePreloader, {\n          images: images,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }), \"Loading Images...\");\n\n      case LoadState.Loaded:\n        if (images === null) return \"images is null\";\n        return React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(TimelapseFC, {\n          images: images,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }));\n    }\n  };\n\n  return React.createElement(React.Fragment, null, component(loadState));\n};","map":{"version":3,"sources":["/Volumes/ST-side-SSD/tsubasa/engineer/playground/typescript/timelapse-app/node_modules/timelapse/src/container/Timelapse.tsx"],"names":["React","useState","useEffect","TimelapseFC","ImagePreloader","LoadState","TimelapseApp","props","None","loadState","setLoadState","images","setImages","Loading","sampleImageCreator","setTimeout","Loaded","component"],"mappings":";;AAAA,OAAOA,KAAP,IAAoBC,QAApB,EAA8BC,SAA9B,QAA+C,OAA/C;AACA,SAASC,WAAT,QAAmC,wBAAnC;AACA,OAAOC,cAAP,MAA2B,6BAA3B;IAGKC,S;;WAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;GAAAA,S,KAAAA,S;;AAML,OAAO,MAAMC,YAAgB,GAAIC,KAAD,IAAW;AAAA,oBACPN,QAAQ,CAAYI,SAAS,CAACG,IAAtB,CADD;AAAA;AAAA,QAClCC,SADkC;AAAA,QACvBC,YADuB;;AAAA,qBAEbT,QAAQ,CAAiB,IAAjB,CAFK;AAAA;AAAA,QAElCU,MAFkC;AAAA,QAE1BC,SAF0B;;AAGzCV,EAAAA,SAAS,CAAC,MAAM;AACd,YAAQO,SAAR;AACE,WAAKJ,SAAS,CAACG,IAAf;AACE;AACA;AACA;AACA;AACAE,QAAAA,YAAY,CAACL,SAAS,CAACQ,OAAX,CAAZ;AACAD,QAAAA,SAAS,CAACE,kBAAkB,CAAC,GAAD,CAAnB,CAAT;AACA;;AACF,WAAKT,SAAS,CAACQ,OAAf;AACEE,QAAAA,UAAU,CAAC,MAAML,YAAY,CAACL,SAAS,CAACW,MAAX,CAAnB,EAAuC,IAAvC,CAAV;AACA;;AACF;AACE;AAbJ;AAeD,GAhBQ,CAAT;;AAkBA,QAAMC,SAAS,GAAIR,SAAD,IAA0B;AAC1C,YAAOA,SAAP;AACE,WAAKJ,SAAS,CAACG,IAAf;AACE,eAAO,gBAAP;;AACF,WAAKH,SAAS,CAACQ,OAAf;AACE,YAAIF,MAAM,KAAK,IAAf,EAAqB,OAAO,IAAP;AACrB,eACE,0CACE,oBAAC,cAAD;AAAgB,UAAA,MAAM,EAAEA,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,sBADF;;AAMF,WAAKN,SAAS,CAACW,MAAf;AACE,YAAIL,MAAM,KAAK,IAAf,EAAqB,OAAO,gBAAP;AACrB,eACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,WAAD;AAAa,UAAA,MAAM,EAAEA,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAbJ;AAmBD,GApBD;;AAqBA,SACE,0CACIM,SAAS,CAACR,SAAD,CADb,CADF;AAKD,CA/CM","sourcesContent":["import React, { FC, useState, useEffect } from 'react';\nimport { TimelapseFC, Image } from \"../component/Timelapse\";\nimport ImagePreloader from \"../component/ImagePreloader\";\nimport { sampleImagesFromUnsplash } from \"../lib/unsplash\";\n\nenum LoadState {\n  None = 0,\n  Loading = 1,\n  Loaded = 2\n}\n\nexport const TimelapseApp: FC = (props) => {\n  const [loadState, setLoadState] = useState<LoadState>(LoadState.None)\n  const [images, setImages] = useState<null | Image[]>(null)\n  useEffect(() => {\n    switch (loadState) {\n      case LoadState.None:\n        // sampleImagesFromUnsplash(\"nature\").then((images) => {\n        //   setLoadState(LoadState.Loading)\n        //   setImages(images)\n        // })\n        setLoadState(LoadState.Loading)\n        setImages(sampleImageCreator(100))\n        break\n      case LoadState.Loading:\n        setTimeout(() => setLoadState(LoadState.Loaded), 3000)\n        break\n      default:\n        break\n      }\n  })\n\n  const component = (loadState: LoadState) => {\n    switch(loadState) {\n      case LoadState.None:\n        return \"Loading Images\"\n      case LoadState.Loading:\n        if (images === null) return null\n        return (\n          <>\n            <ImagePreloader images={images} />\n            Loading Images...\n          </>\n        )\n      case LoadState.Loaded:\n        if (images === null) return \"images is null\"\n        return (\n          <div className=\"App\">\n            <TimelapseFC images={images} />\n          </div>    \n        )\n    }\n  }\n  return (\n    <>\n      { component(loadState) }\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}